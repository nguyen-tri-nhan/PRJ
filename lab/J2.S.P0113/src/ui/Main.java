/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import daos.BookDAO;
import dtos.BookDTO;

/**
 *
 * @author nguyentrinhan.dev
 */
public class Main extends javax.swing.JFrame {

    boolean addNewBook = false;
    boolean isSaved = false;
    DefaultListModel<String> listBookModel = new DefaultListModel<>();

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        this.setLocationRelativeTo(null);
        listBookView.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        firstController();
    }

    public void firstController() {
        BookDAO dao = new BookDAO();
        List<String> list = null;
        txtBookCode.setEditable(false);
        txtBookName.setEditable(false);
        cbbPublishedYear.setEnabled(false);
        this.setResizable(false);
        try {
            list = dao.loadAllBookName();
            if (list.isEmpty()) {
                JOptionPane.showMessageDialog(this, "No Book is found!");
            } else {
                listBookModel.removeAllElements();
                for (int i = 0; i < list.size(); i++) {
                    listBookModel.addElement(list.get(i));
                }
            }
            listBookView.setModel(listBookModel);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }

        for (int i = 1950; i < 2020; i++) {
            cbbPublishedYear.addItem(i + "");
        }
        int row = 0;
        addNewBook = false;
        BookDTO dto = new BookDTO();
        txtBookCode.setEditable(false);
        txtBookName.setEditable(false);
        String bookName = listBookModel.getElementAt(row);
        listBookView.setSelectedIndex(row);
        try {
            dto = dao.findByBookName(bookName);
            txtBookCode.setText(dto.getBookCode());
            txtBookName.setText(dto.getBookName());
            txtBookAuthor.setText(dto.getAuthor());
            txtPublisher.setText(dto.getPublisher());
            cbbPublishedYear.setSelectedItem(dto.getPublishYear() + "");
            cbForRent.setSelected(dto.isForRent());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listBookView = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtBookCode = new javax.swing.JTextField();
        txtBookName = new javax.swing.JTextField();
        txtPublisher = new javax.swing.JTextField();
        txtBookAuthor = new javax.swing.JTextField();
        cbbPublishedYear = new javax.swing.JComboBox<>();
        cbForRent = new javax.swing.JCheckBox();
        btnSave = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Manage Book");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Book List");

        listBookView.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        listBookView.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listBookViewMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listBookView);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setText("Book Author");

        jLabel3.setText("Book Code");

        jLabel4.setText("Book Name");

        jLabel5.setText("Published Year");

        jLabel6.setText("Publisher");

        cbbPublishedYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbPublishedYearActionPerformed(evt);
            }
        });

        cbForRent.setText("For rent");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbForRent)
                    .addComponent(cbbPublishedYear, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBookCode, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                    .addComponent(txtBookName)
                    .addComponent(txtBookAuthor)
                    .addComponent(txtPublisher))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBookCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBookName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBookAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbPublishedYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(cbForRent)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRemove, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnExit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(54, 54, 54))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listBookViewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listBookViewMouseClicked
        // TODO add your handling code here:
        int row = listBookView.getSelectedIndex();
        addNewBook = false;
        BookDAO dao = new BookDAO();
        BookDTO dto = new BookDTO();
        txtBookCode.setEditable(false);
        txtBookName.setEditable(false);
        cbbPublishedYear.setEnabled(false);
        String bookName = listBookModel.getElementAt(row);

        try {
            dto = dao.findByBookName(bookName);
            txtBookCode.setText(dto.getBookCode());
            txtBookName.setText(dto.getBookName());
            txtBookAuthor.setText(dto.getAuthor());
            txtPublisher.setText(dto.getPublisher());
            cbbPublishedYear.setSelectedItem(dto.getPublishYear() + "");
            cbForRent.setSelected(dto.isForRent());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_listBookViewMouseClicked

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        // TODO add your handling code here:
        addNewBook = true;
        listBookView.clearSelection();
        txtBookCode.setText("");
        txtBookName.setText("");
        txtBookAuthor.setText("");
        txtPublisher.setText("");
        cbbPublishedYear.setSelectedIndex(0);
        cbForRent.setSelected(false);
        txtBookCode.setEditable(true);
        txtBookName.setEditable(true);
        cbbPublishedYear.setEnabled(true);
        txtBookCode.requestFocus();
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        try {
            int row = listBookView.getSelectedIndex();
            String bookCode = txtBookCode.getText().trim();
            String bookName = txtBookName.getText().trim();
            String author = txtBookAuthor.getText().trim();
            String publisher = txtPublisher.getText().trim();
            int publishYear = Integer.parseInt(cbbPublishedYear.getSelectedItem().toString());
            boolean forRent = cbForRent.isSelected() ? true : false;
            BookDTO dto = new BookDTO(bookCode, bookName, author, publisher, publishYear, forRent);
            BookDAO dao = new BookDAO();

            // Check dữ liệu
            String valid = "";
            if (bookCode.isEmpty()) {
                valid += "Code may not be blank! \n";
            }
            if (bookName.isEmpty()) {
                valid += "Name may not be blank! \n";
            }
            if (author.isEmpty()) {
                valid += "Author may not be blank! \n";
            }
            if (publisher.isEmpty()) {
                valid += "Publisher may not be blank! \n";
            }

            if (valid.equals("")) {
                if (addNewBook) {
                    try {
                        boolean check = dao.insert(dto);
                        if (check) {
                            JOptionPane.showMessageDialog(this, "Add successful!");
                            listBookModel.addElement(bookName);
                            listBookView.updateUI();

                        } else {
                            JOptionPane.showMessageDialog(this, "Add failed!");
                        }
                    } catch (Exception e) {
                        if (e.getMessage().contains("duplicate")) {
                            JOptionPane.showMessageDialog(this, "This book already existed!.");
                            addNewBook = true;
                            return;
                        } else {
                            JOptionPane.showMessageDialog(this, e.getMessage());
                        }
                    }
                } else {
                    try {
                        boolean check = dao.update(dto);
                        if (check) {
                            JOptionPane.showMessageDialog(this, "Update successful!");
                        } else {
                            JOptionPane.showMessageDialog(this, "Update failed!");
                        }
                    } catch (Exception ex) {

                    }
                }
                addNewBook = false;
                txtBookCode.setEditable(addNewBook);
                txtBookName.setEditable(addNewBook);
                cbbPublishedYear.setEnabled(false);
                isSaved = true;
            } else {
                JOptionPane.showMessageDialog(this, valid);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please choose a book!");
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:
        try {
            String bookCode = txtBookCode.getText();
            int row = listBookView.getSelectedIndex();
            String bookName = (String) listBookModel.getElementAt(row);
            BookDAO dao = new BookDAO();

            try {
                boolean check = dao.delete(bookCode);
                if (check) {
                    JOptionPane.showMessageDialog(this, "Remove successfully!");
                    listBookModel.removeElement(bookName);
                } else {
                    JOptionPane.showMessageDialog(this, "Remove failed!");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }

            if (listBookModel.getSize() > 0) {
                listBookView.setSelectedIndex(0);
                txtBookCode.setEditable(false);
                BookDTO dto = new BookDTO();
                bookName = listBookModel.getElementAt(0);

                try {
                    dto = dao.findByBookName(bookName);
                    txtBookCode.setText(dto.getBookCode());
                    txtBookName.setText(dto.getBookName());
                    txtBookAuthor.setText(dto.getAuthor());
                    txtPublisher.setText(dto.getPublisher());
                    cbbPublishedYear.setSelectedItem(dto.getPublishYear());
                    cbForRent.setSelected(dto.isForRent());
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }
            } else {
                JOptionPane.showMessageDialog(this, "Empty list!");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Please choose record on the table!");

        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:

        int checkExit = JOptionPane.showConfirmDialog(this, "Do you want to exist!", "EXIT", JOptionPane.OK_CANCEL_OPTION);
        if (checkExit == JOptionPane.OK_OPTION) {
            if (!isSaved) {
                int saving = JOptionPane.showConfirmDialog(this, "Do you want to save your book!", "SAVE", JOptionPane.OK_CANCEL_OPTION);
                if (saving == JOptionPane.OK_OPTION) {
                    btnSaveActionPerformed(evt);
                    System.exit(0);
                }
            }
        }
    }//GEN-LAST:event_btnExitActionPerformed

    private void cbbPublishedYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbPublishedYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbPublishedYearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSave;
    private javax.swing.JCheckBox cbForRent;
    private javax.swing.JComboBox<String> cbbPublishedYear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listBookView;
    private javax.swing.JTextField txtBookAuthor;
    private javax.swing.JTextField txtBookCode;
    private javax.swing.JTextField txtBookName;
    private javax.swing.JTextField txtPublisher;
    // End of variables declaration//GEN-END:variables
}
